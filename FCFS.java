
import java.awt.BorderLayout;
import java.io.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Zainab
 */
public class FCFS extends javax.swing.JFrame {

    /**
     * Creates new form FCFS
     */
  
    private List<Process> processes;
    private ArrayList<GanttRecord> gantt;
    private double avgWaitingTime;
    private double avgTurnaroundTime;
    public FCFS(List<Process> processes) {
        initComponents();
        setVisible(true);
        this.processes = processes;
        this.gantt = new ArrayList<>();
    }

    public void schedule() {
        // Sort processes by arrival time
        processes.sort(Comparator.comparingInt(Process::getArrivalTime));

        int currentTime = 0;
        int totalTurnaroundTime = 0;
        int totalWaitingTime = 0;

        for (Process process : processes) {
            // Calculate start time for Gantt chart
            int startTime = Math.max(currentTime, process.getArrivalTime());

            // Calculate completion time
            if (currentTime < process.getArrivalTime()) {
                currentTime = process.getArrivalTime();
            }
            currentTime += process.getCpuBurst();
            process.setCompletionTime(currentTime);

            // Record the Gantt chart entry
            gantt.add(new GanttRecord(startTime, currentTime, process.getPid()));

            // Calculate turnaround time and waiting time
            int turnaroundTime = process.getCompletionTime() - process.getArrivalTime();
            int waitingTime = turnaroundTime - process.getCpuBurst();
            process.setTurnaroundTime(turnaroundTime);
            process.setWaitingTime(waitingTime);
            // Accumulate total turnaround time and waiting time
            totalTurnaroundTime += turnaroundTime;
            totalWaitingTime += waitingTime;
        }

        // Calculate average turnaround time and waiting time
        avgTurnaroundTime = (double) totalTurnaroundTime / processes.size();
        avgWaitingTime = (double) totalWaitingTime / processes.size();
        
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("algorithm_results.txt", true))) {
            writer.write("First Come First Serve" +"," + avgTurnaroundTime + "," + avgWaitingTime);
            writer.newLine();
        } catch (IOException e) {
            e.printStackTrace();
        }

        
        waittime.setText(Double.toString(avgWaitingTime));
        turnaroundtime.setText(Double.toString(avgTurnaroundTime));
        
        // Set Processes 
        Display_Proccess process_panel = new Display_Proccess(processes);
        processpanel.removeAll();
        processpanel.setLayout(new BorderLayout());
        processpanel.add(process_panel, BorderLayout.CENTER);
        processpanel.revalidate();
        processpanel.repaint();
        
        processpanel.add(process_panel);
        
        // Set Gantt chart
        Gantt ganttChart = new Gantt(gantt);
        ganttchartpanel.removeAll();
        ganttchartpanel.setLayout(new BorderLayout());
        ganttchartpanel.add(ganttChart, BorderLayout.CENTER);
        ganttchartpanel.revalidate();
        ganttchartpanel.repaint();
        
        ganttchartpanel.add(ganttChart);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        processpanel = new java.awt.Panel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        turnaroundtime = new javax.swing.JTextField();
        waittime = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ganttchartpanel = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar5 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setBackground(new java.awt.Color(182, 198, 190));
        jLabel9.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(88, 138, 151));
        jLabel9.setText("Processes:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        processpanel.setBackground(new java.awt.Color(182, 198, 190));

        javax.swing.GroupLayout processpanelLayout = new javax.swing.GroupLayout(processpanel);
        processpanel.setLayout(processpanelLayout);
        processpanelLayout.setHorizontalGroup(
            processpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1120, Short.MAX_VALUE)
        );
        processpanelLayout.setVerticalGroup(
            processpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        getContentPane().add(processpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 1120, 260));

        jLabel2.setBackground(new java.awt.Color(182, 198, 190));
        jLabel2.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 60)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(209, 142, 123));
        jLabel2.setText("FIRST COME FIRST SERVE");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        jLabel6.setBackground(new java.awt.Color(182, 198, 190));
        jLabel6.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(88, 138, 151));
        jLabel6.setText("Average Turnaround Time:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 660, -1, -1));

        turnaroundtime.setEditable(false);
        turnaroundtime.setBackground(new java.awt.Color(182, 198, 190));
        turnaroundtime.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 20)); // NOI18N
        turnaroundtime.setForeground(new java.awt.Color(209, 142, 123));
        turnaroundtime.setBorder(null);
        turnaroundtime.setRequestFocusEnabled(false);
        turnaroundtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnaroundtimeActionPerformed(evt);
            }
        });
        getContentPane().add(turnaroundtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 690, 370, -1));

        waittime.setEditable(false);
        waittime.setBackground(new java.awt.Color(182, 198, 190));
        waittime.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 0, 20)); // NOI18N
        waittime.setForeground(new java.awt.Color(209, 142, 123));
        waittime.setBorder(null);
        waittime.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        waittime.setRequestFocusEnabled(false);
        waittime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waittimeActionPerformed(evt);
            }
        });
        getContentPane().add(waittime, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 690, 370, -1));

        jLabel7.setBackground(new java.awt.Color(182, 198, 190));
        jLabel7.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(88, 138, 151));
        jLabel7.setText("Gantt Chart:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, -1, -1));

        jLabel8.setBackground(new java.awt.Color(182, 198, 190));
        jLabel8.setFont(new java.awt.Font("Franklin Gothic Demi Cond", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(88, 138, 151));
        jLabel8.setText("Average Wait Time:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 660, -1, -1));

        ganttchartpanel.setBackground(new java.awt.Color(182, 198, 190));

        javax.swing.GroupLayout ganttchartpanelLayout = new javax.swing.GroupLayout(ganttchartpanel);
        ganttchartpanel.setLayout(ganttchartpanelLayout);
        ganttchartpanelLayout.setHorizontalGroup(
            ganttchartpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ganttchartpanelLayout.setVerticalGroup(
            ganttchartpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        getContentPane().add(ganttchartpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 1110, 200));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bg.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1200, 840));
        jLabel1.setMinimumSize(new java.awt.Dimension(1200, 840));
        jLabel1.setPreferredSize(new java.awt.Dimension(1200, 840));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 840));

        jMenuBar5.setBackground(new java.awt.Color(182, 198, 190));
        jMenuBar5.setForeground(new java.awt.Color(209, 142, 123));

        jMenu5.setBackground(new java.awt.Color(182, 198, 190));
        jMenu5.setForeground(new java.awt.Color(209, 142, 123));
        jMenu5.setText("Back");

        jMenuItem5.setBackground(new java.awt.Color(182, 198, 190));
        jMenuItem5.setForeground(new java.awt.Color(209, 142, 123));
        jMenuItem5.setText("Back");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem5);

        jMenuBar5.add(jMenu5);

        setJMenuBar(jMenuBar5);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void turnaroundtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnaroundtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_turnaroundtimeActionPerformed

    private void waittimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waittimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waittimeActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // Close the current FCFS window
        Main main = new Main();
        setVisible(false);
        main.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Panel ganttchartpanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar5;
    private javax.swing.JMenuItem jMenuItem5;
    private java.awt.Panel processpanel;
    private javax.swing.JTextField turnaroundtime;
    private javax.swing.JTextField waittime;
    // End of variables declaration//GEN-END:variables
}
